(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["LS"] = factory();
	else
		root["LS"] = factory();
})(window, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/index.ts");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/Environment.ts":
/*!****************************!*\
  !*** ./src/Environment.ts ***!
  \****************************/
/*! exports provided: Environment */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Environment\", function() { return Environment; });\nvar Environment = /** @class */ (function () {\r\n    function Environment(parent) {\r\n        if (parent === void 0) { parent = null; }\r\n        this.vars = Object.create(parent ? parent.vars : null);\r\n        this.parent = parent;\r\n    }\r\n    Environment.prototype.extend = function () {\r\n        return new Environment(this);\r\n    };\r\n    Environment.prototype.lookup = function (name) {\r\n        var scope = this;\r\n        while (scope) {\r\n            if (Object.prototype.hasOwnProperty.call(scope.vars, name))\r\n                return scope;\r\n            scope = scope.parent;\r\n        }\r\n        return null;\r\n    };\r\n    Environment.prototype.get = function (name) {\r\n        if (name in this.vars)\r\n            return this.vars[name];\r\n        throw new Error(\"Undefiend variable: \" + name);\r\n    };\r\n    Environment.prototype.set = function (name, value) {\r\n        var scope = this.lookup(name);\r\n        if (!scope && this.parent)\r\n            throw new Error(\"Undefined varible \" + name);\r\n        return ((scope || this).vars[name] = value);\r\n    };\r\n    Environment.prototype.def = function (name, value) {\r\n        return (this.vars[name] = value);\r\n    };\r\n    return Environment;\r\n}());\r\n\r\n\n\n//# sourceURL=webpack://LS/./src/Environment.ts?");

/***/ }),

/***/ "./src/compiler/compile.ts":
/*!*********************************!*\
  !*** ./src/compiler/compile.ts ***!
  \*********************************/
/*! exports provided: compile */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"compile\", function() { return compile; });\n/* harmony import */ var _parser_parse__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../parser/parse */ \"./src/parser/parse.ts\");\n\r\nfunction compile(exp) {\r\n    return js(exp);\r\n    function js(exp) {\r\n        switch (exp.type) {\r\n            case 'num':\r\n            case 'str':\r\n            case 'bool':\r\n                return jsAtom(exp);\r\n            case 'var':\r\n                return jsVar(exp);\r\n            case 'binary':\r\n                return jsBinary(exp);\r\n            case 'assign':\r\n                return jsAssign(exp);\r\n            case \"let\":\r\n                return jsLet(exp);\r\n            case 'func':\r\n                return jsFunction(exp);\r\n            case 'if':\r\n                return jsIf(exp);\r\n            case 'prog':\r\n                return jsProg(exp);\r\n            case 'call':\r\n                return jsCall(exp);\r\n            default:\r\n                throw new Error('unexcepted: ' + JSON.stringify(exp));\r\n        }\r\n    }\r\n    function jsAtom(exp) {\r\n        return JSON.stringify(exp.value);\r\n    }\r\n    function jsVar(exp) {\r\n        return makeVar(exp.value);\r\n    }\r\n    function makeVar(name) {\r\n        return name;\r\n    }\r\n    function jsBinary(exp) {\r\n        return \"(\" + js(exp.left) + exp.operator + js(exp.right) + \")\";\r\n    }\r\n    function jsAssign(exp) {\r\n        return jsBinary(exp);\r\n    }\r\n    function jsFunction(exp) {\r\n        var code = '(function ';\r\n        var CC;\r\n        if (!exp.unguarded) {\r\n            CC = exp.name || 'LS_CC';\r\n            code += makeVar(CC);\r\n        }\r\n        code += \"(\" + exp.vars.map(makeVar).join(', ') + \") {\";\r\n        if (exp.locs && exp.locs.length > 0) {\r\n            code += \"var \" + exp.locs.join(', ') + \";\";\r\n        }\r\n        if (!exp.unguarded) {\r\n            code += \"GUARD(arguments, \" + CC + \"); \";\r\n        }\r\n        code += \" \" + js(exp.body) + \" })\";\r\n        return code;\r\n    }\r\n    function jsLet(exp) {\r\n        if (exp.vars.length === 0)\r\n            return js(exp.body);\r\n        var iife = {\r\n            type: 'call',\r\n            func: {\r\n                type: 'func',\r\n                vars: [exp.vars[0].name],\r\n                body: {\r\n                    type: 'let',\r\n                    vars: exp.vars.slice(1),\r\n                    body: exp.body\r\n                }\r\n            },\r\n            args: [exp.vars[0].def || _parser_parse__WEBPACK_IMPORTED_MODULE_0__[\"FALSE\"]]\r\n        };\r\n        return \"(\" + js(iife) + \")\";\r\n    }\r\n    function jsIf(exp) {\r\n        return \"(\" + js(exp.cond) + \" !== false ? \" + js(exp.then) + \" : \" + js(exp.else || _parser_parse__WEBPACK_IMPORTED_MODULE_0__[\"FALSE\"]) + \")\";\r\n    }\r\n    function jsProg(exp) {\r\n        return \"(\" + exp.prog.map(js).join(', ') + \")\";\r\n    }\r\n    function jsCall(exp) {\r\n        return js(exp.func) + \"(\" + exp.args.map(js).join(', ') + \")\";\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://LS/./src/compiler/compile.ts?");

/***/ }),

/***/ "./src/compiler/generateSymbol.ts":
/*!****************************************!*\
  !*** ./src/compiler/generateSymbol.ts ***!
  \****************************************/
/*! exports provided: generateSymbol */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"generateSymbol\", function() { return generateSymbol; });\nvar counter = 0;\r\nfunction generateSymbol(name) {\r\n    if (name === void 0) { name = ''; }\r\n    return \"LS_\" + name + counter++;\r\n}\r\n\n\n//# sourceURL=webpack://LS/./src/compiler/generateSymbol.ts?");

/***/ }),

/***/ "./src/compiler/hasSideEffects.ts":
/*!****************************************!*\
  !*** ./src/compiler/hasSideEffects.ts ***!
  \****************************************/
/*! exports provided: hasSideEffects */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"hasSideEffects\", function() { return hasSideEffects; });\nfunction hasSideEffects(exp) {\r\n    switch (exp.type) {\r\n        case 'call':\r\n        case 'assign':\r\n            return true;\r\n        case 'num':\r\n        case 'str':\r\n        case 'bool':\r\n        case 'var':\r\n        case 'func':\r\n            return false;\r\n        case 'binary':\r\n            return hasSideEffects(exp.left) || hasSideEffects(exp.right);\r\n        case 'if':\r\n            return hasSideEffects(exp.cond) || hasSideEffects(exp.then) || (exp.else && hasSideEffects(exp.else));\r\n        case 'let': {\r\n            for (var i = 0; i < exp.vars.length; i++) {\r\n                var v = exp.vars[i];\r\n                if (v.def && hasSideEffects(v.def))\r\n                    return true;\r\n            }\r\n            return hasSideEffects(exp.body);\r\n        }\r\n        case 'prog': {\r\n            for (var i = 0; i < exp.prog.length; i++) {\r\n                if (hasSideEffects(exp.prog[i]))\r\n                    return true;\r\n            }\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\n\n//# sourceURL=webpack://LS/./src/compiler/hasSideEffects.ts?");

/***/ }),

/***/ "./src/compiler/index.ts":
/*!*******************************!*\
  !*** ./src/compiler/index.ts ***!
  \*******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _compile__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./compile */ \"./src/compiler/compile.ts\");\n/* harmony import */ var _toCPS__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./toCPS */ \"./src/compiler/toCPS.ts\");\n/* harmony import */ var _optimize__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./optimize */ \"./src/compiler/optimize.ts\");\n\r\n\r\n\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (function (AST) {\r\n    var cps = Object(_toCPS__WEBPACK_IMPORTED_MODULE_1__[\"toCPS\"])(AST, function (x) {\r\n        return {\r\n            type: 'call',\r\n            func: {\r\n                type: 'var',\r\n                value: 'LS_TOPLEVEL'\r\n            },\r\n            args: [x]\r\n        };\r\n    });\r\n    var opt = Object(_optimize__WEBPACK_IMPORTED_MODULE_2__[\"optimize\"])(cps);\r\n    var jsc = Object(_compile__WEBPACK_IMPORTED_MODULE_0__[\"compile\"])(opt);\r\n    jsc = 'var LS_TMP;\\n\\n' + jsc;\r\n    if (opt.env) {\r\n        var vars = Object.keys(opt.env.vars);\r\n        if (vars.length > 0) {\r\n            jsc = 'var ' + vars.map(function (name) {\r\n                return Object(_compile__WEBPACK_IMPORTED_MODULE_0__[\"compile\"])({\r\n                    type: 'var',\r\n                    value: name\r\n                });\r\n            }).join(\", \") + \";\\n\\n\" + jsc;\r\n        }\r\n    }\r\n    jsc = '\"use strict\";\\n\\n' + jsc;\r\n    return jsc;\r\n});\r\n\n\n//# sourceURL=webpack://LS/./src/compiler/index.ts?");

/***/ }),

/***/ "./src/compiler/optimize.ts":
/*!**********************************!*\
  !*** ./src/compiler/optimize.ts ***!
  \**********************************/
/*! exports provided: optimize */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"optimize\", function() { return optimize; });\n/* harmony import */ var _hasSideEffects__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./hasSideEffects */ \"./src/compiler/hasSideEffects.ts\");\n/* harmony import */ var _generateSymbol__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./generateSymbol */ \"./src/compiler/generateSymbol.ts\");\n/* harmony import */ var _Environment__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Environment */ \"./src/Environment.ts\");\n\r\n\r\n\r\nvar FALSE = { type: 'bool', value: false };\r\nvar TRUE = { type: 'bool', value: true };\r\nfunction optimize(exp) {\r\n    var changes;\r\n    var defun;\r\n    do {\r\n        changes = 0;\r\n        makeScope(exp);\r\n        exp = opt(exp);\r\n    } while (changes);\r\n    makeScope(exp);\r\n    return exp;\r\n    function opt(exp) {\r\n        if (changes)\r\n            return exp;\r\n        switch (exp.type) {\r\n            case 'num':\r\n            case 'str':\r\n            case 'bool':\r\n            case 'var':\r\n                return exp;\r\n            case 'binary':\r\n                return optBinary(exp);\r\n            case 'assign':\r\n                return optAssign(exp);\r\n            case 'if':\r\n                return optIf(exp);\r\n            case 'prog':\r\n                return optProg(exp);\r\n            case 'call':\r\n                return optCall(exp);\r\n            case 'func':\r\n                return optFunc(exp);\r\n        }\r\n        throw new Error(\"unable to optimize \" + JSON.stringify(exp));\r\n    }\r\n    function changed() {\r\n        changes++;\r\n    }\r\n    function isConstant(exp) {\r\n        return exp.type == 'num' || exp.type == 'str' || exp.type == 'bool';\r\n    }\r\n    function num(exp) {\r\n        if (exp.type != 'num')\r\n            throw new Error('Not a number: ' + JSON.stringify(exp));\r\n        return exp.value;\r\n    }\r\n    function div(exp) {\r\n        if (num(exp) == 0)\r\n            throw new Error(\"Division by zero: \" + JSON.stringify(exp));\r\n        return exp.value;\r\n    }\r\n    function optBinary(exp) {\r\n        exp.left = opt(exp.left);\r\n        exp.right = opt(exp.right);\r\n        if (isConstant(exp.left) && isConstant(exp.right)) {\r\n            switch (exp.operator) {\r\n                case '+':\r\n                    changed();\r\n                    return {\r\n                        type: 'num',\r\n                        value: num(exp.left) + num(exp.right)\r\n                    };\r\n                case '-':\r\n                    changed();\r\n                    return {\r\n                        type: 'num',\r\n                        value: num(exp.left) - num(exp.right)\r\n                    };\r\n                case '*':\r\n                    changed();\r\n                    return {\r\n                        type: 'num',\r\n                        value: num(exp.left) * num(exp.right)\r\n                    };\r\n                case '/':\r\n                    changed();\r\n                    return {\r\n                        type: 'num',\r\n                        value: num(exp.left) / div(exp.right)\r\n                    };\r\n                case '%':\r\n                    changed();\r\n                    return {\r\n                        type: 'num',\r\n                        value: num(exp.left) % div(exp.right)\r\n                    };\r\n                case '<':\r\n                    changed();\r\n                    return {\r\n                        type: 'bool',\r\n                        value: num(exp.left) < num(exp.right)\r\n                    };\r\n                case '>':\r\n                    changed();\r\n                    return {\r\n                        type: 'bool',\r\n                        value: num(exp.left) > num(exp.right)\r\n                    };\r\n                case '<=':\r\n                    changed();\r\n                    return {\r\n                        type: 'bool',\r\n                        value: num(exp.left) <= num(exp.right)\r\n                    };\r\n                case '>=':\r\n                    changed();\r\n                    return {\r\n                        type: 'bool',\r\n                        value: num(exp.left) >= num(exp.right)\r\n                    };\r\n                case '==':\r\n                    changed();\r\n                    if (exp.left.type !== exp.right.type)\r\n                        return FALSE;\r\n                    return {\r\n                        type: 'bool',\r\n                        value: exp.left.value === exp.right.value\r\n                    };\r\n                case '!=':\r\n                    changed();\r\n                    if (exp.left.type !== exp.right.type)\r\n                        return TRUE;\r\n                    return {\r\n                        type: 'bool',\r\n                        value: exp.left.value !== exp.right.value\r\n                    };\r\n                case '||':\r\n                    changed();\r\n                    if (exp.left.value !== false)\r\n                        return exp.left;\r\n                    return exp.right;\r\n                case '&&':\r\n                    changed();\r\n                    if (exp.left.value !== false)\r\n                        return exp.right;\r\n                    return FALSE;\r\n            }\r\n        }\r\n        return exp;\r\n    }\r\n    function optAssign(exp) {\r\n        if (exp.left.type === 'var') {\r\n            if (exp.right.type === 'var' && exp.right.def.cont) {\r\n                changed();\r\n                exp.left.def.refs.forEach(function (node) {\r\n                    node.value = exp.right.value;\r\n                });\r\n                return opt(exp.right);\r\n            }\r\n            if (exp.left.def.refs.length === exp.left.def.assigned && exp.left.env.parent) {\r\n                changed();\r\n                return opt(exp.right);\r\n            }\r\n        }\r\n        exp.left = opt(exp.left);\r\n        exp.right = opt(exp.right);\r\n        return exp;\r\n    }\r\n    function optIf(exp) {\r\n        exp.cond = opt(exp.cond);\r\n        exp.then = opt(exp.then);\r\n        exp.else = opt(exp.else || FALSE);\r\n        if (isConstant(exp.cond)) {\r\n            changed();\r\n            if (exp.cond.value !== false)\r\n                return exp.then;\r\n            return exp.else;\r\n        }\r\n        return exp;\r\n    }\r\n    function optProg(exp) {\r\n        if (exp.prog.length === 0) {\r\n            changed();\r\n            return FALSE;\r\n        }\r\n        if (exp.prog.length === 1) {\r\n            changed();\r\n            return opt(exp.prog[0]);\r\n        }\r\n        if (!Object(_hasSideEffects__WEBPACK_IMPORTED_MODULE_0__[\"hasSideEffects\"])(exp.prog[0])) {\r\n            changed();\r\n            return opt({\r\n                type: 'prog',\r\n                prog: exp.prog.slice(1)\r\n            });\r\n        }\r\n        if (exp.prog.length === 2)\r\n            return {\r\n                type: 'prog',\r\n                prog: exp.prog.map(opt)\r\n            };\r\n        return opt({\r\n            type: 'prog',\r\n            prog: [\r\n                exp.prog[0],\r\n                {\r\n                    type: 'prog',\r\n                    prog: exp.prog.slice(1)\r\n                }\r\n            ]\r\n        });\r\n    }\r\n    function optCall(exp) {\r\n        var func = exp.func;\r\n        if (func.type === 'func' && !func.name) {\r\n            if (func.env.parent.parent)\r\n                return optIIFE(exp);\r\n            func.unguarded = true;\r\n        }\r\n        return {\r\n            type: 'call',\r\n            func: opt(func),\r\n            args: exp.args.map(opt)\r\n        };\r\n    }\r\n    function optFunc(exp) {\r\n        TCO: if (exp.body.type === 'call' &&\r\n            exp.body.func.type === 'var' &&\r\n            exp.body.func.def.assigned === 0 &&\r\n            exp.body.func.env.parent &&\r\n            exp.vars.indexOf(exp.body.func.value) < 0 &&\r\n            exp.vars.length === exp.body.args.length) {\r\n            for (var i = 0; i < exp.vars.length; i++) {\r\n                var x = exp.body.args[i];\r\n                if (x.type !== 'var' || x.value !== exp.vars[i])\r\n                    break TCO;\r\n            }\r\n            changed();\r\n            return opt(exp.body.func);\r\n        }\r\n        exp.locs = exp.locs.filter(function (name) {\r\n            var def = exp.env.get(name);\r\n            return def.refs.length > 0;\r\n        });\r\n        var save = defun;\r\n        defun = exp;\r\n        exp.body = opt(exp.body);\r\n        if (exp.body.type === 'call')\r\n            exp.unguarded = true;\r\n        defun = save;\r\n        return exp;\r\n    }\r\n    function optIIFE(exp) {\r\n        changed();\r\n        var func = exp.func;\r\n        var argvalues = exp.args.map(opt);\r\n        var body = opt(func.body);\r\n        function rename(name) {\r\n            var symbol = name in defun.env.vars ? Object(_generateSymbol__WEBPACK_IMPORTED_MODULE_1__[\"generateSymbol\"])(name + '$') : name;\r\n            defun.locs.push(symbol);\r\n            defun.env.def(symbol, true);\r\n            func.env.get(name).refs.forEach(function (ref) {\r\n                ref.value = symbol;\r\n            });\r\n            return symbol;\r\n        }\r\n        var prog = func.vars.map(function (name, i) {\r\n            return {\r\n                type: 'assign',\r\n                operator: '=',\r\n                left: {\r\n                    type: 'var',\r\n                    value: rename(name)\r\n                },\r\n                right: argvalues[i] || FALSE\r\n            };\r\n        });\r\n        func.locs.forEach(rename);\r\n        prog.push(body);\r\n        return opt({\r\n            type: 'prog',\r\n            prog: prog\r\n        });\r\n    }\r\n}\r\nfunction makeScope(exp) {\r\n    var global = new _Environment__WEBPACK_IMPORTED_MODULE_2__[\"Environment\"]();\r\n    exp.env = global;\r\n    (function scope(exp, env) {\r\n        switch (exp.type) {\r\n            case 'num':\r\n            case 'str':\r\n            case 'bool':\r\n            case 'raw':\r\n                break;\r\n            case 'var':\r\n                var s = env.lookup(exp.value);\r\n                if (!s) {\r\n                    exp.env = global;\r\n                    global.def(exp.value, { refs: [], assigned: 0 });\r\n                }\r\n                else {\r\n                    exp.env = s;\r\n                }\r\n                var def = exp.env.get(exp.value);\r\n                def.refs.push(exp);\r\n                exp.def = def;\r\n                break;\r\n            case 'assign':\r\n                scope(exp.left, env);\r\n                scope(exp.right, env);\r\n                if (exp.left.type === 'var')\r\n                    exp.left.def.assigned++;\r\n                break;\r\n            case 'binary':\r\n                scope(exp.left, env);\r\n                scope(exp.right, env);\r\n                break;\r\n            case 'if':\r\n                scope(exp.cond, env);\r\n                scope(exp.then, env);\r\n                if (exp.else)\r\n                    scope(exp.else, env);\r\n                break;\r\n            case 'prog':\r\n                exp.prog.forEach(function (exp) {\r\n                    scope(exp, env);\r\n                });\r\n                break;\r\n            case 'call':\r\n                scope(exp.func, env);\r\n                exp.args.forEach(function (exp) {\r\n                    scope(exp, env);\r\n                });\r\n                break;\r\n            case 'func':\r\n                exp.env = env = env.extend();\r\n                if (exp.name)\r\n                    env.def(exp.name, { refs: [], func: true, assigned: 0 });\r\n                exp.vars.forEach(function (name, i) {\r\n                    env.def(name, { refs: [], farg: true, assigned: 0, cont: i === 0 });\r\n                });\r\n                if (!exp.locs)\r\n                    exp.locs = [];\r\n                exp.locs.forEach(function (name) {\r\n                    env.def(name, { refs: [], floc: true, assigned: 0 });\r\n                });\r\n                scope(exp.body, env);\r\n                break;\r\n            default:\r\n                throw new Error(\"Can't handle node \" + JSON.stringify(exp));\r\n        }\r\n    })(exp, global);\r\n    return exp.env;\r\n}\r\n\n\n//# sourceURL=webpack://LS/./src/compiler/optimize.ts?");

/***/ }),

/***/ "./src/compiler/toCPS.ts":
/*!*******************************!*\
  !*** ./src/compiler/toCPS.ts ***!
  \*******************************/
/*! exports provided: toCPS */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"toCPS\", function() { return toCPS; });\n/* harmony import */ var _parser_parse__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../parser/parse */ \"./src/parser/parse.ts\");\n/* harmony import */ var _generateSymbol__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./generateSymbol */ \"./src/compiler/generateSymbol.ts\");\n/* harmony import */ var _hasSideEffects__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./hasSideEffects */ \"./src/compiler/hasSideEffects.ts\");\n\r\n\r\n\r\nfunction toCPS(exp, k) {\r\n    return cps(exp, k);\r\n    function cps(exp, k) {\r\n        switch (exp.type) {\r\n            case 'num':\r\n            case 'str':\r\n            case 'bool':\r\n            case 'var':\r\n                return cpsAtom(exp, k);\r\n            case 'assign':\r\n            case 'binary':\r\n                return cpsBinary(exp, k);\r\n            case 'let':\r\n                return cpsLet(exp, k);\r\n            case 'func':\r\n                return cpsFunction(exp, k);\r\n            case 'if':\r\n                return cpsIf(exp, k);\r\n            case 'prog':\r\n                return cpsProg(exp, k);\r\n            case 'call':\r\n                return cpsCall(exp, k);\r\n            default:\r\n                throw new Error(\"Unknown type: \" + JSON.stringify(exp));\r\n        }\r\n    }\r\n    function cpsAtom(exp, k) {\r\n        return k(exp);\r\n    }\r\n    function cpsBinary(exp, k) {\r\n        return cps(exp.left, function (left) {\r\n            return cps(exp.right, function (right) {\r\n                return k({\r\n                    type: exp.type,\r\n                    operator: exp.operator,\r\n                    left: left,\r\n                    right: right\r\n                });\r\n            });\r\n        });\r\n    }\r\n    function cpsLet(exp, k) {\r\n        if (exp.vars.length === 0)\r\n            return cps(exp.body, k);\r\n        return cps({\r\n            type: 'call',\r\n            args: [exp.vars[0].def || _parser_parse__WEBPACK_IMPORTED_MODULE_0__[\"FALSE\"]],\r\n            func: {\r\n                type: 'func',\r\n                vars: [exp.vars[0].name],\r\n                body: {\r\n                    type: 'let',\r\n                    vars: exp.vars.slice(1),\r\n                    body: exp.body\r\n                }\r\n            }\r\n        }, k);\r\n    }\r\n    function cpsFunction(exp, k) {\r\n        var cont = Object(_generateSymbol__WEBPACK_IMPORTED_MODULE_1__[\"generateSymbol\"])('K');\r\n        var body = cps(exp.body, function (body) {\r\n            return {\r\n                type: 'call',\r\n                func: {\r\n                    type: 'var',\r\n                    value: cont\r\n                },\r\n                args: [body]\r\n            };\r\n        });\r\n        return k({\r\n            type: 'func',\r\n            name: exp.name,\r\n            vars: [cont].concat(exp.vars),\r\n            body: body\r\n        });\r\n    }\r\n    function cpsIf(exp, k) {\r\n        return cps(exp.cond, function (cond) {\r\n            var cvar = Object(_generateSymbol__WEBPACK_IMPORTED_MODULE_1__[\"generateSymbol\"])('I');\r\n            var cast = makeContinuation(k);\r\n            k = function (ifresult) {\r\n                return {\r\n                    type: 'call',\r\n                    func: {\r\n                        type: 'var',\r\n                        value: cvar\r\n                    },\r\n                    args: [ifresult]\r\n                };\r\n            };\r\n            return {\r\n                type: 'call',\r\n                func: {\r\n                    type: 'func',\r\n                    vars: [cvar],\r\n                    body: {\r\n                        type: 'if',\r\n                        cond: cond,\r\n                        then: cps(exp.then, k),\r\n                        else: cps(exp.else || _parser_parse__WEBPACK_IMPORTED_MODULE_0__[\"FALSE\"], k)\r\n                    }\r\n                },\r\n                args: [cast]\r\n            };\r\n        });\r\n    }\r\n    function cpsCall(exp, k) {\r\n        return cps(exp.func, function (func) {\r\n            return (function loop(args, i) {\r\n                if (i === exp.args.length)\r\n                    return {\r\n                        type: 'call',\r\n                        func: func,\r\n                        args: args\r\n                    };\r\n                return cps(exp.args[i], function (value) {\r\n                    args[i + 1] = value;\r\n                    return loop(args, i + 1);\r\n                });\r\n            })([makeContinuation(k)], 0);\r\n        });\r\n    }\r\n    function makeContinuation(k) {\r\n        var cont = Object(_generateSymbol__WEBPACK_IMPORTED_MODULE_1__[\"generateSymbol\"])('R');\r\n        return {\r\n            type: 'func',\r\n            vars: [cont],\r\n            body: k({\r\n                type: 'var',\r\n                value: cont\r\n            })\r\n        };\r\n    }\r\n    function cpsProg(exp, k) {\r\n        return (function loop(body) {\r\n            if (body.length === 0)\r\n                return k(_parser_parse__WEBPACK_IMPORTED_MODULE_0__[\"FALSE\"]);\r\n            if (body.length === 1)\r\n                return cps(body[0], k);\r\n            if (!Object(_hasSideEffects__WEBPACK_IMPORTED_MODULE_2__[\"hasSideEffects\"])(body[0]))\r\n                return loop(body.slice(1));\r\n            return cps(body[0], function (first) {\r\n                if (Object(_hasSideEffects__WEBPACK_IMPORTED_MODULE_2__[\"hasSideEffects\"])(first))\r\n                    return {\r\n                        type: 'prog',\r\n                        prog: [first, loop(body.slice(1))]\r\n                    };\r\n                return loop(body.slice(1));\r\n            });\r\n        })(exp.prog);\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://LS/./src/compiler/toCPS.ts?");

/***/ }),

/***/ "./src/index.ts":
/*!**********************!*\
  !*** ./src/index.ts ***!
  \**********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _parser_index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./parser/index */ \"./src/parser/index.ts\");\n/* harmony import */ var _compiler_index__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./compiler/index */ \"./src/compiler/index.ts\");\n\r\n\r\nvar stackLength;\r\nvar inExecute = false;\r\nfunction GUARD(args, f) {\r\n    if (--stackLength < 0)\r\n        throw new Continuation(f, args);\r\n}\r\nfunction Continuation(f, args) {\r\n    this.f = f;\r\n    this.args = args;\r\n}\r\nfunction Execute(f, args) {\r\n    if (inExecute)\r\n        return f.apply(null, args);\r\n    inExecute = true;\r\n    while (true) {\r\n        try {\r\n            stackLength = 200;\r\n            f.apply(null, args);\r\n            break;\r\n        }\r\n        catch (ex) {\r\n            if (ex instanceof Continuation) {\r\n                f = ex.f;\r\n                args = ex.args;\r\n            }\r\n            else {\r\n                inExecute = false;\r\n                throw ex;\r\n            }\r\n        }\r\n    }\r\n    inExecute = false;\r\n}\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (function (code) {\r\n    var res;\r\n    var AST = Object(_parser_index__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(code);\r\n    var jsc = Object(_compiler_index__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(AST);\r\n    var func = new Function('LS_TOPLEVEL, GUARD, Execute', jsc);\r\n    Execute(func, [\r\n        function (result) {\r\n            res = result;\r\n        },\r\n        GUARD,\r\n        Execute\r\n    ]);\r\n    return res;\r\n});\r\n\n\n//# sourceURL=webpack://LS/./src/index.ts?");

/***/ }),

/***/ "./src/parser/InputStream.ts":
/*!***********************************!*\
  !*** ./src/parser/InputStream.ts ***!
  \***********************************/
/*! exports provided: InputStream */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"InputStream\", function() { return InputStream; });\nfunction InputStream(input) {\r\n    var pos = 0;\r\n    var line = 1;\r\n    var col = 0;\r\n    return {\r\n        next: next,\r\n        peek: peek,\r\n        eof: eof,\r\n        croak: croak\r\n    };\r\n    function next() {\r\n        var ch = input.charAt(pos++);\r\n        if (ch === '\\n') {\r\n            line++;\r\n            col = 0;\r\n        }\r\n        else {\r\n            col++;\r\n        }\r\n        return ch;\r\n    }\r\n    function peek() {\r\n        return input.charAt(pos);\r\n    }\r\n    function eof() {\r\n        return peek() === '';\r\n    }\r\n    function croak(message) {\r\n        throw new Error(message + \" (\" + line + \":\" + col + \")\");\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://LS/./src/parser/InputStream.ts?");

/***/ }),

/***/ "./src/parser/TokenStream.ts":
/*!***********************************!*\
  !*** ./src/parser/TokenStream.ts ***!
  \***********************************/
/*! exports provided: TokenStream */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TokenStream\", function() { return TokenStream; });\nfunction TokenStream(input) {\r\n    var current = null;\r\n    var keywords = ' let if then else func true false ';\r\n    return {\r\n        next: next,\r\n        peek: peek,\r\n        eof: eof,\r\n        croak: input.croak\r\n    };\r\n    function isKeyword(ch) {\r\n        return keywords.indexOf(\" \" + ch + \" \") >= 0;\r\n    }\r\n    function isDigit(ch) {\r\n        return /[0-9]/i.test(ch);\r\n    }\r\n    function isIdentifierStart(ch) {\r\n        return /[a-z_]/i.test(ch);\r\n    }\r\n    function isIdentifier(ch) {\r\n        return isIdentifierStart(ch) || '?!-<>=0123456789'.indexOf(ch) >= 0;\r\n    }\r\n    function isOperator(ch) {\r\n        return '+-*/%=&|<>!'.indexOf(ch) >= 0;\r\n    }\r\n    function isPunctuation(ch) {\r\n        return ',;(){}[]'.indexOf(ch) >= 0;\r\n    }\r\n    function isWhitespace(ch) {\r\n        return ' \\t\\n'.indexOf(ch) >= 0;\r\n    }\r\n    function readWhile(predicate) {\r\n        var str = '';\r\n        while (!input.eof() && predicate(input.peek())) {\r\n            str += input.next();\r\n        }\r\n        return str;\r\n    }\r\n    function readNumber() {\r\n        var hasDot = false;\r\n        var number = readWhile(function (ch) {\r\n            if (ch === '.') {\r\n                if (hasDot)\r\n                    return false;\r\n                hasDot = true;\r\n                return true;\r\n            }\r\n            return isDigit(ch);\r\n        });\r\n        return { type: 'num', value: parseFloat(number) };\r\n    }\r\n    function readIdentifier() {\r\n        var value = readWhile(isIdentifier);\r\n        return {\r\n            type: isKeyword(value) ? 'kw' : 'var',\r\n            value: value\r\n        };\r\n    }\r\n    function readEscaped(end) {\r\n        var escaped = false;\r\n        var str = '';\r\n        input.next();\r\n        while (!input.eof()) {\r\n            var ch = input.next();\r\n            if (escaped) {\r\n                str += ch;\r\n                escaped = false;\r\n            }\r\n            else if (ch === '\\\\')\r\n                escaped = true;\r\n            else if (ch === end)\r\n                break;\r\n            else\r\n                str += ch;\r\n        }\r\n        return str;\r\n    }\r\n    function readString() {\r\n        return {\r\n            type: 'str',\r\n            value: readEscaped('\"')\r\n        };\r\n    }\r\n    function skipComment() {\r\n        readWhile(function (ch) { return ch !== '\\n'; });\r\n        input.next();\r\n    }\r\n    function readNext() {\r\n        readWhile(isWhitespace);\r\n        if (input.eof())\r\n            return null;\r\n        var ch = input.peek();\r\n        if (ch === '#') {\r\n            skipComment();\r\n            return readNext();\r\n        }\r\n        if (ch === '\"')\r\n            return readString();\r\n        if (isDigit(ch))\r\n            return readNumber();\r\n        if (isIdentifierStart(ch))\r\n            return readIdentifier();\r\n        if (isPunctuation(ch))\r\n            return {\r\n                type: 'punc',\r\n                value: input.next()\r\n            };\r\n        if (isOperator(ch))\r\n            return {\r\n                type: 'op',\r\n                value: readWhile(isOperator)\r\n            };\r\n        input.croak(\"Cannot handle character: \" + ch);\r\n    }\r\n    function peek() {\r\n        return current || (current = readNext());\r\n    }\r\n    function next() {\r\n        var tok = current;\r\n        current = null;\r\n        return tok || readNext();\r\n    }\r\n    function eof() {\r\n        return peek() === null;\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://LS/./src/parser/TokenStream.ts?");

/***/ }),

/***/ "./src/parser/index.ts":
/*!*****************************!*\
  !*** ./src/parser/index.ts ***!
  \*****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _InputStream__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./InputStream */ \"./src/parser/InputStream.ts\");\n/* harmony import */ var _TokenStream__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./TokenStream */ \"./src/parser/TokenStream.ts\");\n/* harmony import */ var _parse__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./parse */ \"./src/parser/parse.ts\");\n\r\n\r\n\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (function (code) {\r\n    return Object(_parse__WEBPACK_IMPORTED_MODULE_2__[\"parse\"])(Object(_TokenStream__WEBPACK_IMPORTED_MODULE_1__[\"TokenStream\"])(Object(_InputStream__WEBPACK_IMPORTED_MODULE_0__[\"InputStream\"])(code)));\r\n});\r\n\n\n//# sourceURL=webpack://LS/./src/parser/index.ts?");

/***/ }),

/***/ "./src/parser/parse.ts":
/*!*****************************!*\
  !*** ./src/parser/parse.ts ***!
  \*****************************/
/*! exports provided: FALSE, parse */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FALSE\", function() { return FALSE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"parse\", function() { return parse; });\nvar FALSE = {\r\n    type: 'bool',\r\n    value: false\r\n};\r\nvar PRECEDENCE = {\r\n    '=': 1,\r\n    '||': 2,\r\n    '&&': 3,\r\n    '<': 7,\r\n    '>': 7,\r\n    '<=': 7,\r\n    '>=': 7,\r\n    '==': 7,\r\n    '!=': 7,\r\n    '+': 10,\r\n    '-': 10,\r\n    '*': 20,\r\n    '/': 20,\r\n    '%': 20\r\n};\r\nfunction parse(input) {\r\n    return parseTopLevel();\r\n    function parseTopLevel() {\r\n        var prog = [];\r\n        while (!input.eof()) {\r\n            prog.push(parseExpression());\r\n            if (!input.eof())\r\n                skipPunctuation(';');\r\n        }\r\n        return {\r\n            type: 'prog',\r\n            prog: prog\r\n        };\r\n    }\r\n    function delimited(start, stop, separator, parser) {\r\n        var a = [];\r\n        var first = true;\r\n        skipPunctuation(start);\r\n        while (!input.eof()) {\r\n            if (isPunctuation(stop))\r\n                break;\r\n            if (first)\r\n                first = false;\r\n            else\r\n                skipPunctuation(separator);\r\n            if (isPunctuation(stop))\r\n                break;\r\n            a.push(parser());\r\n        }\r\n        skipPunctuation(stop);\r\n        return a;\r\n    }\r\n    function parseFunction() {\r\n        return {\r\n            type: 'func',\r\n            name: input.peek().type === 'var' ? input.next().value : null,\r\n            vars: delimited('(', ')', ',', parseVarName),\r\n            body: parseExpression()\r\n        };\r\n    }\r\n    function parseLet() {\r\n        skipKeyword('let');\r\n        if (input.peek().type === 'var') {\r\n            var name_1 = input.next().value;\r\n            var defs = delimited('(', ')', ',', parseVarDef);\r\n            return {\r\n                type: 'call',\r\n                func: {\r\n                    type: 'func',\r\n                    name: name_1,\r\n                    vars: defs.map(function (def) { return def.name; }),\r\n                    body: parseExpression()\r\n                },\r\n                args: defs.map(function (def) { return def.def || FALSE; })\r\n            };\r\n        }\r\n        return {\r\n            type: 'let',\r\n            vars: delimited('(', ')', ',', parseVarDef),\r\n            body: parseExpression()\r\n        };\r\n    }\r\n    function parseVarDef() {\r\n        var name = parseVarName();\r\n        var def;\r\n        if (isOperator('=')) {\r\n            input.next();\r\n            def = parseExpression();\r\n        }\r\n        return {\r\n            name: name,\r\n            def: def\r\n        };\r\n    }\r\n    function parseVarName() {\r\n        var name = input.next();\r\n        if (name.type !== 'var')\r\n            input.croak('Expecting variable name');\r\n        return name.value;\r\n    }\r\n    function parseIf() {\r\n        skipKeyword('if');\r\n        var cond = parseExpression();\r\n        if (!isPunctuation('{')) {\r\n            skipKeyword('then');\r\n        }\r\n        var then = parseExpression();\r\n        var result = {\r\n            type: 'if',\r\n            cond: cond,\r\n            then: then\r\n        };\r\n        if (isKeyword('else')) {\r\n            input.next();\r\n            result['else'] = parseExpression();\r\n        }\r\n        return result;\r\n    }\r\n    function parseBool() {\r\n        return {\r\n            type: 'bool',\r\n            value: input.next().value === 'true'\r\n        };\r\n    }\r\n    function parseAtom() {\r\n        return lexCall(function () {\r\n            if (isPunctuation('(')) {\r\n                input.next();\r\n                var exp = parseExpression();\r\n                skipPunctuation(')');\r\n                return exp;\r\n            }\r\n            if (isPunctuation('{'))\r\n                return parseProg();\r\n            if (isKeyword('if'))\r\n                return parseIf();\r\n            if (isKeyword('true') || isKeyword('false'))\r\n                return parseBool();\r\n            if (isKeyword('func')) {\r\n                input.next();\r\n                return parseFunction();\r\n            }\r\n            if (isKeyword('let'))\r\n                return parseLet();\r\n            var tok = input.next();\r\n            if (tok.type === 'var' || tok.type === 'num' || tok.type === 'str')\r\n                return tok;\r\n            unexpected();\r\n        });\r\n    }\r\n    function parseProg() {\r\n        var prog = delimited('{', '}', ';', parseExpression);\r\n        if (prog.length === 0)\r\n            return FALSE;\r\n        if (prog.length === 1)\r\n            return prog[0];\r\n        return {\r\n            type: 'prog',\r\n            prog: prog\r\n        };\r\n    }\r\n    function parseExpression() {\r\n        return lexCall(function () {\r\n            return lexBinary(parseAtom(), 0);\r\n        });\r\n    }\r\n    function lexCall(expr) {\r\n        var result = expr();\r\n        return isPunctuation('(') ? parseCall(result) : result;\r\n    }\r\n    function parseCall(func) {\r\n        return {\r\n            type: 'call',\r\n            func: func,\r\n            args: delimited('(', ')', ',', parseExpression)\r\n        };\r\n    }\r\n    function lexBinary(left, prec) {\r\n        if (isOperator()) {\r\n            var tok = input.peek();\r\n            var otherPrec = PRECEDENCE[tok.value];\r\n            if (otherPrec > prec) {\r\n                input.next();\r\n                var right = lexBinary(parseAtom(), otherPrec);\r\n                var binary = {\r\n                    type: tok.value === '=' ? 'assign' : 'binary',\r\n                    operator: tok.value,\r\n                    left: left,\r\n                    right: right\r\n                };\r\n                return lexBinary(binary, prec);\r\n            }\r\n        }\r\n        return left;\r\n    }\r\n    function isPunctuation(ch) {\r\n        var tok = input.peek();\r\n        return tok !== null && tok.type === 'punc' && (!ch || tok.value === ch);\r\n    }\r\n    function isKeyword(ch) {\r\n        var tok = input.peek();\r\n        return tok !== null && tok.type === 'kw' && (!ch || tok.value === ch);\r\n    }\r\n    function isOperator(ch) {\r\n        var tok = input.peek();\r\n        return tok !== null && tok.type === 'op' && (!ch || tok.value === ch);\r\n    }\r\n    function skipPunctuation(ch) {\r\n        if (isPunctuation(ch))\r\n            input.next();\r\n        else\r\n            input.croak(\"Expecting punctuation: \\\"\" + ch + \"\\\"\");\r\n    }\r\n    function skipKeyword(ch) {\r\n        if (isKeyword(ch))\r\n            input.next();\r\n        else\r\n            input.croak(\"Expecting Keyword: \\\"\" + ch + \"\\\"\");\r\n    }\r\n    function unexpected() {\r\n        var tok = JSON.stringify(input.peek());\r\n        input.croak(\"Unexpected token: \" + tok);\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://LS/./src/parser/parse.ts?");

/***/ })

/******/ })["default"];
});